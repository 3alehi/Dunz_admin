"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.tsx
var src_exports = {};
__export(src_exports, {
  Calendar: () => Calendar
});
module.exports = __toCommonJS(src_exports);

// ../../node_modules/@tabler/icons/icons-react/dist/index.esm.js
var e = __toESM(require("react"));
function t() {
  return t = Object.assign ? Object.assign.bind() : function(e2) {
    for (var t2 = 1; t2 < arguments.length; t2++) {
      var o2 = arguments[t2];
      for (var r in o2)
        Object.prototype.hasOwnProperty.call(o2, r) && (e2[r] = o2[r]);
    }
    return e2;
  }, t.apply(this, arguments);
}
function o(e2, t2) {
  if (null == e2)
    return {};
  var o2, r, n = function(e3, t3) {
    if (null == e3)
      return {};
    var o3, r2, n2 = {}, l2 = Object.keys(e3);
    for (r2 = 0; r2 < l2.length; r2++)
      o3 = l2[r2], t3.indexOf(o3) >= 0 || (n2[o3] = e3[o3]);
    return n2;
  }(e2, t2);
  if (Object.getOwnPropertySymbols) {
    var l = Object.getOwnPropertySymbols(e2);
    for (r = 0; r < l.length; r++)
      o2 = l[r], t2.indexOf(o2) >= 0 || Object.prototype.propertyIsEnumerable.call(e2, o2) && (n[o2] = e2[o2]);
  }
  return n;
}
var hH = ["size", "color", "stroke"];
function dH(r) {
  var n = r.size, l = void 0 === n ? 24 : n, i = r.color, a = void 0 === i ? "currentColor" : i, c = r.stroke, s = void 0 === c ? 2 : c, h = o(r, hH);
  return e.createElement("svg", t({ xmlns: "http://www.w3.org/2000/svg", className: "icon icon-tabler icon-tabler-chevron-left", width: l, height: l, viewBox: "0 0 24 24", strokeWidth: s, stroke: a, fill: "none", strokeLinecap: "round", strokeLinejoin: "round" }, h), e.createElement("path", { stroke: "none", d: "M0 0h24v24H0z", fill: "none" }), e.createElement("polyline", { points: "15 6 9 12 15 18" }));
}
var vH = ["size", "color", "stroke"];
function mH(r) {
  var n = r.size, l = void 0 === n ? 24 : n, i = r.color, a = void 0 === i ? "currentColor" : i, c = r.stroke, s = void 0 === c ? 2 : c, h = o(r, vH);
  return e.createElement("svg", t({ xmlns: "http://www.w3.org/2000/svg", className: "icon icon-tabler icon-tabler-chevron-right", width: l, height: l, viewBox: "0 0 24 24", strokeWidth: s, stroke: a, fill: "none", strokeLinecap: "round", strokeLinejoin: "round" }, h), e.createElement("path", { stroke: "none", d: "M0 0h24v24H0z", fill: "none" }), e.createElement("polyline", { points: "9 6 15 12 9 18" }));
}
var VO = ["size", "color", "stroke"];
function XO(r) {
  var n = r.size, l = void 0 === n ? 24 : n, i = r.color, a = void 0 === i ? "currentColor" : i, c = r.stroke, s = void 0 === c ? 2 : c, h = o(r, VO);
  return e.createElement("svg", t({ xmlns: "http://www.w3.org/2000/svg", className: "icon icon-tabler icon-tabler-clock", width: l, height: l, viewBox: "0 0 24 24", strokeWidth: s, stroke: a, fill: "none", strokeLinecap: "round", strokeLinejoin: "round" }, h), e.createElement("path", { stroke: "none", d: "M0 0h24v24H0z", fill: "none" }), e.createElement("circle", { cx: 12, cy: 12, r: 9 }), e.createElement("polyline", { points: "12 7 12 12 15 15" }));
}

// src/index.tsx
var import_classnames = __toESM(require("classnames"), 1);
var import_date_fns_jalali3 = require("date-fns-jalali");
var import_esm = require("date-fns-jalali/esm");
var import_persian_helpers2 = require("persian-helpers");
var import_react2 = require("react");

// src/Footer.tsx
var import_jsx_runtime = require("react/jsx-runtime");
var Footer = ({}) => {
  return /* @__PURE__ */ (0, import_jsx_runtime.jsxs)("div", {
    className: "bg-gray-100 w-full p-6 flex items-center text-blue-500",
    children: [
      /* @__PURE__ */ (0, import_jsx_runtime.jsx)("button", {
        className: "ml-6",
        children: "\u062A\u0627\u06CC\u06CC\u062F"
      }),
      /* @__PURE__ */ (0, import_jsx_runtime.jsx)("button", {
        children: "\u0627\u0646\u0635\u0631\u0627\u0641"
      }),
      /* @__PURE__ */ (0, import_jsx_runtime.jsx)("button", {
        className: "mr-auto",
        children: /* @__PURE__ */ (0, import_jsx_runtime.jsx)(XO, {
          className: "w-5 h-5"
        })
      })
    ]
  });
};
var Footer_default = Footer;

// src/Header.tsx
var import_date_fns_jalali = require("date-fns-jalali");
var import_persian_helpers = require("persian-helpers");
var import_react = require("react");
var import_jsx_runtime2 = require("react/jsx-runtime");
var Header = ({ activeDate }) => {
  const activeDateToJalali = (0, import_react.useMemo)(
    () => ({
      day: (0, import_persian_helpers.convertDigits)((0, import_date_fns_jalali.getDate)(activeDate)),
      monthAndDayOfWeek: (0, import_date_fns_jalali.format)(activeDate, "MMMM\u060C EEEE")
    }),
    [activeDate]
  );
  return /* @__PURE__ */ (0, import_jsx_runtime2.jsxs)("div", {
    className: "w-full bg-blue-600 text-white py-6 px-4 flex items-center space-x-2 space-x-reverse",
    children: [
      /* @__PURE__ */ (0, import_jsx_runtime2.jsx)("h1", {
        className: "text-5xl font-bold",
        children: activeDateToJalali == null ? void 0 : activeDateToJalali.day
      }),
      /* @__PURE__ */ (0, import_jsx_runtime2.jsx)("h2", {
        className: "text-base",
        children: activeDateToJalali == null ? void 0 : activeDateToJalali.monthAndDayOfWeek
      })
    ]
  });
};
var Header_default = Header;

// src/utils/getDates.ts
var import_date_fns_jalali2 = require("date-fns-jalali");
var getDates = (activeDate) => {
  const startOfTheSelectedMonth = (0, import_date_fns_jalali2.startOfMonth)(activeDate);
  const endOfTheSelectedMonth = (0, import_date_fns_jalali2.endOfMonth)(activeDate);
  const startDate = (0, import_date_fns_jalali2.startOfWeek)(startOfTheSelectedMonth);
  const endDate = (0, import_date_fns_jalali2.endOfWeek)(endOfTheSelectedMonth);
  let currentDate = startDate;
  const days = [];
  while (currentDate <= endDate) {
    days.push(currentDate);
    currentDate = (0, import_date_fns_jalali2.addDays)(currentDate, 1);
  }
  console.log(days);
  return days;
};

// src/index.tsx
var import_jsx_runtime3 = require("react/jsx-runtime");
var Calendar = () => {
  const [activeDate, setActiveDate] = (0, import_react2.useState)(new Date());
  const activeDateDays = (0, import_react2.useMemo)(() => getDates(activeDate), [activeDate]);
  const activeDayChangeHandler = (day) => {
    setActiveDate(day);
  };
  const nextMonthHandler = () => {
    setActiveDate((previousDate) => (0, import_date_fns_jalali3.addMonths)(previousDate, 1));
  };
  const previousMonthHandler = () => {
    setActiveDate((previousDate) => (0, import_esm.subMonths)(previousDate, 1));
  };
  return /* @__PURE__ */ (0, import_jsx_runtime3.jsxs)("div", {
    className: "flex flex-col rounded-md shadow-lg font-vazirmatn max-w-[22rem] overflow-hidden",
    dir: "rtl",
    children: [
      /* @__PURE__ */ (0, import_jsx_runtime3.jsx)(Header_default, {
        activeDate
      }),
      /* @__PURE__ */ (0, import_jsx_runtime3.jsxs)("div", {
        className: "bg-white p-4 flex flex-col items-center space-y-6",
        children: [
          /* @__PURE__ */ (0, import_jsx_runtime3.jsxs)("div", {
            className: "flex items-center justify-between text-gray-500 w-full",
            children: [
              /* @__PURE__ */ (0, import_jsx_runtime3.jsx)("button", {
                onClick: previousMonthHandler,
                children: /* @__PURE__ */ (0, import_jsx_runtime3.jsx)(mH, {
                  className: "w-4 h-4"
                })
              }),
              /* @__PURE__ */ (0, import_jsx_runtime3.jsx)("h1", {
                className: "text-base",
                children: (0, import_persian_helpers2.convertDigits)((0, import_date_fns_jalali3.format)(activeDate, "MMMM yyyy"))
              }),
              /* @__PURE__ */ (0, import_jsx_runtime3.jsx)("button", {
                onClick: nextMonthHandler,
                children: /* @__PURE__ */ (0, import_jsx_runtime3.jsx)(dH, {
                  className: "w-4 h-4"
                })
              })
            ]
          }),
          /* @__PURE__ */ (0, import_jsx_runtime3.jsx)("div", {
            className: "grid grid-cols-7 gap-4",
            children: ["\u0634", "\u06CC", "\u062F", "\u0633", "\u0686", "\u067E", "\u062C"].map((day) => /* @__PURE__ */ (0, import_jsx_runtime3.jsx)("h2", {
              className: " m-0 text-sm rounded-full bg-gray-100 p-2 w-9 h-9 text-center text-gray-400 border border-transparent",
              children: day
            }))
          }),
          /* @__PURE__ */ (0, import_jsx_runtime3.jsx)("div", {
            className: "grid grid-cols-7 gap-4 pt-2",
            children: activeDateDays.map((day, index) => /* @__PURE__ */ (0, import_jsx_runtime3.jsx)("button", {
              onClick: activeDayChangeHandler.bind(void 0, day),
              className: (0, import_classnames.default)(
                "text-sm w-9 h-9 rounded-full text-center border border-transparent hover:border-gray-600 m-0",
                (0, import_date_fns_jalali3.isToday)(day) && "border-blue-500",
                (0, import_date_fns_jalali3.isSameDay)(day, activeDate) && "bg-blue-500 text-white",
                (0, import_date_fns_jalali3.isFriday)(day) && ((0, import_date_fns_jalali3.isSameDay)(day, activeDate) ? "text-red-200" : "text-red-500"),
                !(0, import_date_fns_jalali3.isSameMonth)(day, activeDate) && "opacity-50"
              ),
              children: (0, import_persian_helpers2.convertDigits)((0, import_date_fns_jalali3.getDate)(day))
            }, index))
          })
        ]
      }),
      /* @__PURE__ */ (0, import_jsx_runtime3.jsx)(Footer_default, {})
    ]
  });
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  Calendar
});
