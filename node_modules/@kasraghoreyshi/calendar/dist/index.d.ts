import * as react from 'react';

declare type TThemeClasses = {
    headerBackgroundColor: string;
    headerTextColor: string;
    chevronRightColor: string;
    chevronLeftColor: string;
    topBarTextColor: string;
    bodyBackgroundColor: string;
    weekDaysTextColor: string;
    weekDaysBackgroundColor: string;
    daysColor: string;
    daysBackgroundColor: string;
    todayBorderColor: string;
    daysSelectedColor: string;
    daysSelectedBackgroundColor: string;
    offDaysColor: string;
    offDaysSelectedColor: string;
    footerBackgroundColor: string;
    footerButtonColor: string;
};
declare type TCalendarThemes = "dark" | "darkRed" | "light" | TThemeClasses;
interface ICalendarProps {
    highlightToday?: boolean;
    onChange?: (newDate: Date) => void;
    activeDate?: Date;
    defaultActiveDate?: Date;
    theme?: TCalendarThemes;
    showGoToToday?: boolean;
    minDate?: Date;
    maxDate?: Date;
    disabledDates?: Date[];
    showFooter?: boolean;
    disableTransitions?: boolean;
    bodyTransition?: "zoomIn" | "zoomOut" | "fade";
    showFridaysAsRed?: boolean;
    months?: string[];
    style?: React.StyleHTMLAttributes<HTMLDivElement>;
    onConfirm?: (newDate: Date) => void;
    onCancel?: () => void;
}
declare const Calendar: react.ForwardRefExoticComponent<ICalendarProps & react.RefAttributes<HTMLDivElement>>;

export { Calendar, ICalendarProps, TThemeClasses };
