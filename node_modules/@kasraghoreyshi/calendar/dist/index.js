"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.tsx
var src_exports = {};
__export(src_exports, {
  Calendar: () => Calendar
});
module.exports = __toCommonJS(src_exports);

// ../../node_modules/@tabler/icons/icons-react/dist/index.esm.js
var e = __toESM(require("react"));
function t() {
  return t = Object.assign ? Object.assign.bind() : function(e2) {
    for (var t2 = 1; t2 < arguments.length; t2++) {
      var o2 = arguments[t2];
      for (var r in o2)
        Object.prototype.hasOwnProperty.call(o2, r) && (e2[r] = o2[r]);
    }
    return e2;
  }, t.apply(this, arguments);
}
function o(e2, t2) {
  if (null == e2)
    return {};
  var o2, r, n = function(e3, t3) {
    if (null == e3)
      return {};
    var o3, r2, n2 = {}, l2 = Object.keys(e3);
    for (r2 = 0; r2 < l2.length; r2++)
      o3 = l2[r2], t3.indexOf(o3) >= 0 || (n2[o3] = e3[o3]);
    return n2;
  }(e2, t2);
  if (Object.getOwnPropertySymbols) {
    var l = Object.getOwnPropertySymbols(e2);
    for (r = 0; r < l.length; r++)
      o2 = l[r], t2.indexOf(o2) >= 0 || Object.prototype.propertyIsEnumerable.call(e2, o2) && (n[o2] = e2[o2]);
  }
  return n;
}
var hH = ["size", "color", "stroke"];
function dH(r) {
  var n = r.size, l = void 0 === n ? 24 : n, i = r.color, a = void 0 === i ? "currentColor" : i, c = r.stroke, s = void 0 === c ? 2 : c, h = o(r, hH);
  return e.createElement("svg", t({ xmlns: "http://www.w3.org/2000/svg", className: "icon icon-tabler icon-tabler-chevron-left", width: l, height: l, viewBox: "0 0 24 24", strokeWidth: s, stroke: a, fill: "none", strokeLinecap: "round", strokeLinejoin: "round" }, h), e.createElement("path", { stroke: "none", d: "M0 0h24v24H0z", fill: "none" }), e.createElement("polyline", { points: "15 6 9 12 15 18" }));
}
var vH = ["size", "color", "stroke"];
function mH(r) {
  var n = r.size, l = void 0 === n ? 24 : n, i = r.color, a = void 0 === i ? "currentColor" : i, c = r.stroke, s = void 0 === c ? 2 : c, h = o(r, vH);
  return e.createElement("svg", t({ xmlns: "http://www.w3.org/2000/svg", className: "icon icon-tabler icon-tabler-chevron-right", width: l, height: l, viewBox: "0 0 24 24", strokeWidth: s, stroke: a, fill: "none", strokeLinecap: "round", strokeLinejoin: "round" }, h), e.createElement("path", { stroke: "none", d: "M0 0h24v24H0z", fill: "none" }), e.createElement("polyline", { points: "9 6 15 12 9 18" }));
}

// src/index.tsx
var import_classnames5 = __toESM(require("classnames"));
var import_date_fns_jalali6 = require("date-fns-jalali");
var import_persian_helpers4 = require("persian-helpers");
var import_react4 = require("react");
var import_react_transition_group = require("react-transition-group");

// src/Footer.tsx
var import_classnames = __toESM(require("classnames"));
var import_jsx_runtime = require("react/jsx-runtime");
var Footer = ({ themeClasses, onCancel, onConfirm }) => {
  return /* @__PURE__ */ (0, import_jsx_runtime.jsxs)("div", {
    style: {
      color: themeClasses.footerButtonColor,
      backgroundColor: themeClasses.footerBackgroundColor
    },
    className: (0, import_classnames.default)("w-full p-6 flex items-center"),
    children: [
      /* @__PURE__ */ (0, import_jsx_runtime.jsx)("button", {
        onClick: onConfirm,
        className: "ml-6",
        children: "\u062A\u0627\u06CC\u06CC\u062F"
      }),
      /* @__PURE__ */ (0, import_jsx_runtime.jsx)("button", {
        onClick: onCancel,
        children: "\u0627\u0646\u0635\u0631\u0627\u0641"
      })
    ]
  });
};
var Footer_default = Footer;

// src/Header.tsx
var import_date_fns_jalali = require("date-fns-jalali");
var import_persian_helpers = require("persian-helpers");
var import_react = require("react");
var import_jsx_runtime2 = require("react/jsx-runtime");
var Header = ({
  activeDate,
  onGoToToday,
  showGoToToday,
  selectedDate,
  months,
  themeClasses
}) => {
  const activeDateToJalali = (0, import_react.useMemo)(
    () => ({
      day: (0, import_persian_helpers.convertDigits)((0, import_date_fns_jalali.getDate)(activeDate)),
      dayOfWeek: (0, import_date_fns_jalali.format)(activeDate, "EEEE")
    }),
    [activeDate]
  );
  return /* @__PURE__ */ (0, import_jsx_runtime2.jsxs)("div", {
    style: {
      color: themeClasses.headerTextColor,
      backgroundColor: themeClasses.headerBackgroundColor
    },
    className: "w-full py-6 px-4 flex items-center",
    children: [
      /* @__PURE__ */ (0, import_jsx_runtime2.jsx)("h1", {
        className: "text-5xl font-bold ml-2",
        children: activeDateToJalali == null ? void 0 : activeDateToJalali.day
      }),
      /* @__PURE__ */ (0, import_jsx_runtime2.jsxs)("h2", {
        className: "text-base",
        children: [
          months[(0, import_date_fns_jalali.getMonth)(activeDate)],
          "\u060C ",
          activeDateToJalali == null ? void 0 : activeDateToJalali.dayOfWeek
        ]
      }),
      showGoToToday && !(0, import_date_fns_jalali.isToday)(selectedDate) && /* @__PURE__ */ (0, import_jsx_runtime2.jsx)("button", {
        onClick: onGoToToday,
        className: "px-4 py-2 rounded-md bg-white text-black mr-auto text-sm",
        children: "\u0628\u0631\u0648 \u0628\u0647 \u0627\u0645\u0631\u0648\u0632"
      })
    ]
  });
};
var Header_default = Header;

// src/MainBody.tsx
var import_classnames2 = __toESM(require("classnames"));
var import_date_fns_jalali3 = require("date-fns-jalali");
var import_persian_helpers2 = require("persian-helpers");
var import_react2 = require("react");

// src/utils/getDates.ts
var import_date_fns_jalali2 = require("date-fns-jalali");
var getDates = (activeDate) => {
  const startOfTheSelectedMonth = (0, import_date_fns_jalali2.startOfMonth)(activeDate);
  const endOfTheSelectedMonth = (0, import_date_fns_jalali2.endOfMonth)(activeDate);
  const startDate = (0, import_date_fns_jalali2.startOfWeek)(startOfTheSelectedMonth);
  const endDate = (0, import_date_fns_jalali2.endOfWeek)(endOfTheSelectedMonth);
  let currentDate = startDate;
  const days = [];
  while (currentDate <= endDate) {
    days.push(currentDate);
    currentDate = (0, import_date_fns_jalali2.addDays)(currentDate, 1);
  }
  return days;
};

// src/MainBody.tsx
var import_jsx_runtime3 = require("react/jsx-runtime");
var daysOfTheWeek = [
  "\u0634\u0646\u0628\u0647",
  "\u06CC\u06A9\u200C\u0634\u0646\u0628\u0647",
  "\u062F\u0648\u0634\u0646\u0628\u0647",
  "\u0633\u0647\u200C\u0634\u0646\u0628\u0647",
  "\u0686\u0647\u0627\u0631\u200C\u0634\u0646\u0628\u0647",
  "\u067E\u0646\u062C\u200C\u0634\u0646\u0628\u0647",
  "\u062C\u0645\u0639\u0647"
];
var MainBody = ({
  maxDate,
  minDate,
  onActiveDayChange,
  highlightToday,
  disabledDates,
  themeClasses,
  activeDate,
  selectedDate,
  showFridaysAsRed
}) => {
  const selectedDateDays = (0, import_react2.useMemo)(
    () => getDates(selectedDate),
    [selectedDate]
  );
  return /* @__PURE__ */ (0, import_jsx_runtime3.jsxs)(import_jsx_runtime3.Fragment, {
    children: [
      /* @__PURE__ */ (0, import_jsx_runtime3.jsx)("div", {
        className: "grid grid-cols-7 gap-4",
        children: ["\u0634", "\u06CC", "\u062F", "\u0633", "\u0686", "\u067E", "\u062C"].map((day, index) => /* @__PURE__ */ (0, import_jsx_runtime3.jsx)("h2", {
          style: {
            color: themeClasses.weekDaysTextColor,
            backgroundColor: themeClasses.weekDaysBackgroundColor
          },
          className: (0, import_classnames2.default)(
            "m-0 text-sm rounded-full p-2 w-9 h-9 text-center border border-transparent"
          ),
          "aria-label": daysOfTheWeek[index],
          title: daysOfTheWeek[index],
          children: day
        }, day))
      }),
      /* @__PURE__ */ (0, import_jsx_runtime3.jsx)("div", {
        className: "grid grid-cols-7 gap-4",
        children: selectedDateDays.map((day, index) => {
          const isDateInvalid = minDate && day < minDate || maxDate && day > maxDate || (disabledDates == null ? void 0 : disabledDates.includes(day));
          const textColor = () => {
            if (showFridaysAsRed && (0, import_date_fns_jalali3.isFriday)(day))
              return (0, import_date_fns_jalali3.isSameDay)(day, activeDate) ? themeClasses.offDaysSelectedColor : themeClasses.offDaysColor;
            if ((0, import_date_fns_jalali3.isSameDay)(day, activeDate))
              return themeClasses.daysSelectedColor;
            return themeClasses.daysColor;
          };
          const backgroundColor = () => {
            return (0, import_date_fns_jalali3.isSameDay)(day, activeDate) ? themeClasses.daysSelectedBackgroundColor : themeClasses.daysBackgroundColor;
          };
          return /* @__PURE__ */ (0, import_jsx_runtime3.jsx)("button", {
            disabled: isDateInvalid,
            onClick: onActiveDayChange.bind(void 0, day),
            style: {
              color: textColor(),
              backgroundColor: backgroundColor(),
              borderColor: (0, import_date_fns_jalali3.isToday)(day) && highlightToday ? themeClasses.todayBorderColor : "transparent"
            },
            className: (0, import_classnames2.default)(
              "text-sm w-9 h-9 rounded-full text-center border m-0",
              (!(0, import_date_fns_jalali3.isSameMonth)(day, selectedDate) || isDateInvalid) && "opacity-50"
            ),
            children: (0, import_persian_helpers2.convertDigits)((0, import_date_fns_jalali3.getDate)(day))
          }, day.toString());
        })
      })
    ]
  });
};
var MainBody_default = MainBody;

// src/MonthsBody.tsx
var import_classnames3 = __toESM(require("classnames"));
var import_date_fns_jalali4 = require("date-fns-jalali");
var import_jsx_runtime4 = require("react/jsx-runtime");
var MonthsBody = ({
  onChangeMonth,
  months,
  themeClasses,
  selectedDate
}) => {
  return /* @__PURE__ */ (0, import_jsx_runtime4.jsx)("div", {
    className: "grid grid-cols-3 gap-4",
    children: months.map((month, index) => /* @__PURE__ */ (0, import_jsx_runtime4.jsx)("button", {
      onClick: () => onChangeMonth(index),
      style: {
        backgroundColor: index === (0, import_date_fns_jalali4.getMonth)(selectedDate) ? themeClasses.daysSelectedBackgroundColor : themeClasses.daysBackgroundColor,
        color: index === (0, import_date_fns_jalali4.getMonth)(selectedDate) ? themeClasses.daysSelectedColor : themeClasses.daysColor
      },
      className: (0, import_classnames3.default)("px-6 py-4 rounded-full text-center"),
      children: month
    }, month))
  });
};
var MonthsBody_default = MonthsBody;

// src/YearsBody.tsx
var import_classnames4 = __toESM(require("classnames"));
var import_date_fns_jalali5 = require("date-fns-jalali");
var import_persian_helpers3 = require("persian-helpers");
var import_react3 = require("react");
var import_jsx_runtime5 = require("react/jsx-runtime");
var YearsBody = ({
  onChangeYear,
  activeDate,
  themeClasses,
  selectedDate
}) => {
  const currentYear = (0, import_react3.useMemo)(() => (0, import_date_fns_jalali5.getYear)(new Date()), []);
  const years = [
    ...[...new Array(100)].map((item, index) => currentYear - (100 - index)),
    ...[...new Array(100)].map((item, index) => currentYear + index)
  ];
  const [domNode, setDomNode] = (0, import_react3.useState)(null);
  const currentYearRef = (0, import_react3.useCallback)(setDomNode, []);
  (0, import_react3.useEffect)(() => {
    if (domNode) {
      domNode.scrollIntoView({
        behavior: "smooth",
        block: "center",
        inline: "center"
      });
    }
  }, [domNode]);
  const otherYearsRef = (0, import_react3.useRef)(null);
  return /* @__PURE__ */ (0, import_jsx_runtime5.jsx)("div", {
    className: "grid grid-cols-3 gap-4 max-h-72 overflow-y-scroll custom-scroll",
    children: years.map((year, index) => /* @__PURE__ */ (0, import_jsx_runtime5.jsx)("button", {
      ref: year === (0, import_date_fns_jalali5.getYear)(selectedDate) ? currentYearRef : otherYearsRef,
      onClick: () => onChangeYear(year),
      style: {
        backgroundColor: year === (0, import_date_fns_jalali5.getYear)(selectedDate) ? themeClasses.daysSelectedBackgroundColor : themeClasses.daysBackgroundColor,
        color: year === (0, import_date_fns_jalali5.getYear)(selectedDate) ? themeClasses.daysSelectedColor : themeClasses.daysColor
      },
      className: (0, import_classnames4.default)("px-6 py-4 rounded-full text-center"),
      children: (0, import_persian_helpers3.convertDigits)(year)
    }, year))
  });
};
var YearsBody_default = YearsBody;

// src/index.tsx
var import_jsx_runtime6 = require("react/jsx-runtime");
var FadeTransition = ({ children, bodyTransition, ...rest }) => /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_react_transition_group.Transition, {
  ...rest,
  children: (state) => {
    let transitionClass;
    switch (bodyTransition) {
      case "fade":
        transitionClass = { in: "opacity-100", out: "opacity-0" };
        break;
      case "zoomOut":
        transitionClass = {
          in: "opacity-100 scale-100",
          out: "opacity-0 scale-50"
        };
        break;
      default:
      case "zoomIn":
        transitionClass = {
          in: "opacity-100 scale-100",
          out: "opacity-0 scale-110"
        };
        break;
    }
    return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)("div", {
      className: (0, import_classnames5.default)(
        state === "exiting" || state === "entering" ? "absolute top-0" : "relative",
        state === "entered" ? transitionClass.in : transitionClass.out,
        state === "exited" ? "hidden" : "block",
        "transition-all ease-in-out w-full h-full flex flex-col space-y-4"
      ),
      children
    });
  }
});
var getInitialDate = (defaultActiveDate, propActiveDate, minDate) => {
  if (defaultActiveDate)
    return defaultActiveDate;
  if (propActiveDate)
    return propActiveDate;
  if (minDate) {
    let clonedMin = new Date(minDate);
    while (clonedMin <= minDate) {
      clonedMin.setDate(clonedMin.getDate() + 1);
    }
    return clonedMin;
  }
  return new Date();
};
var Calendar = (0, import_react4.forwardRef)(
  ({
    highlightToday = true,
    onChange,
    activeDate: propActiveDate,
    theme = "light",
    showGoToToday = true,
    defaultActiveDate,
    minDate,
    maxDate,
    showFooter = false,
    disabledDates,
    disableTransitions,
    bodyTransition = "zoomIn",
    style,
    showFridaysAsRed = true,
    months = [
      "\u0641\u0631\u0648\u0631\u062F\u06CC\u0646",
      "\u0627\u0631\u062F\u06CC\u0628\u0647\u0634\u062A",
      "\u062E\u0631\u062F\u0627\u062F",
      "\u062A\u06CC\u0631",
      "\u0645\u0631\u062F\u0627\u062F",
      "\u0634\u0647\u0631\u06CC\u0648\u0631",
      "\u0645\u0647\u0631",
      "\u0622\u0628\u0627\u0646",
      "\u0622\u0630\u0631",
      "\u062F\u06CC",
      "\u0628\u0647\u0645\u0646",
      "\u0627\u0633\u0641\u0646\u062F"
    ],
    onCancel,
    onConfirm
  }, ref) => {
    const [activeDate, setActiveDate] = (0, import_react4.useState)(
      getInitialDate(defaultActiveDate, propActiveDate, minDate)
    );
    const [selectedDate, setSelectedDate] = (0, import_react4.useState)(activeDate);
    const [activeBody, setActiveBody] = (0, import_react4.useState)(
      "main"
    );
    (0, import_react4.useEffect)(() => {
      if (propActiveDate)
        setActiveDate(activeDate);
    }, [propActiveDate]);
    const goToTodayHandler = () => {
      setActiveDate(new Date());
    };
    const activeDayChangeHandler = (day) => {
      setActiveDate(day);
    };
    const nextMonthHandler = () => {
      setSelectedDate((previousDate) => (0, import_date_fns_jalali6.addMonths)(previousDate, 1));
    };
    const previousMonthHandler = () => {
      setSelectedDate((previousDate) => (0, import_date_fns_jalali6.subMonths)(previousDate, 1));
    };
    const monthChangeHandler = (month) => {
      setSelectedDate((previousDate) => (0, import_date_fns_jalali6.setMonth)(previousDate, month));
    };
    const yearChangeHandler = (year) => {
      setSelectedDate((previousDate) => (0, import_date_fns_jalali6.setYear)(previousDate, year));
    };
    const cycleThroughBodies = () => {
      if (activeBody === "main")
        return setActiveBody("months");
      if (activeBody === "months")
        return setActiveBody("years");
      return setActiveBody("main");
    };
    const goToPreviousBody = () => {
      if (activeBody === "years")
        return setActiveBody("months");
      setActiveBody("main");
    };
    (0, import_react4.useEffect)(() => {
      setSelectedDate(activeDate);
      onChange == null ? void 0 : onChange(activeDate);
    }, [activeDate]);
    (0, import_react4.useEffect)(() => {
      goToPreviousBody();
    }, [selectedDate]);
    const compareMinDate = () => {
      if (!minDate)
        return false;
      const minDateClone = new Date(minDate);
      const now = new Date();
      minDateClone.setHours(0, 0, 0);
      now.setHours(0, 0, 0);
      return now > minDate;
    };
    const themeClasses = (0, import_react4.useMemo)(() => {
      switch (theme) {
        case "light":
          return {
            bodyBackgroundColor: "#fff",
            chevronLeftColor: "#6b7280",
            chevronRightColor: "#6b7280",
            topBarTextColor: "#6b7280",
            weekDaysBackgroundColor: "#f3f4f6",
            weekDaysTextColor: "#9ca3af",
            daysBackgroundColor: "transparent",
            daysSelectedBackgroundColor: "#3b82f6",
            todayBorderColor: "#3b82f6",
            daysSelectedColor: "#fff",
            daysColor: "#000",
            footerBackgroundColor: "#f1f5f9",
            footerButtonColor: "#3b82f6",
            headerBackgroundColor: "#0284c7",
            headerTextColor: "#fff",
            offDaysColor: "#ef4444",
            offDaysSelectedColor: "#fee2e2"
          };
        case "dark":
          return {
            bodyBackgroundColor: "#1c1917",
            chevronLeftColor: "#e7e5e4",
            chevronRightColor: "#e7e5e4",
            topBarTextColor: "#e7e5e4",
            weekDaysBackgroundColor: "#78716c",
            weekDaysTextColor: "#d6d3d1",
            daysBackgroundColor: "transparent",
            daysSelectedBackgroundColor: "#3b82f6",
            todayBorderColor: "#3b82f6",
            daysSelectedColor: "#fff",
            daysColor: "#fff",
            footerBackgroundColor: "#292524",
            footerButtonColor: "#3b82f6",
            headerBackgroundColor: "#0284c7",
            headerTextColor: "#fff",
            offDaysColor: "#ef4444",
            offDaysSelectedColor: "#fee2e2"
          };
        case "darkRed":
          return {
            bodyBackgroundColor: "#1c1917",
            chevronLeftColor: "#e7e5e4",
            chevronRightColor: "#e7e5e4",
            topBarTextColor: "#e7e5e4",
            weekDaysBackgroundColor: "#78716c",
            weekDaysTextColor: "#d6d3d1",
            daysBackgroundColor: "transparent",
            daysSelectedBackgroundColor: "#f43f5e",
            todayBorderColor: "#f43f5e",
            daysSelectedColor: "#fff",
            daysColor: "#fff",
            footerBackgroundColor: "#292524",
            footerButtonColor: "#f43f5e",
            headerBackgroundColor: "#e11d48",
            headerTextColor: "#fff",
            offDaysColor: "#ef4444",
            offDaysSelectedColor: "#fee2e2"
          };
        default:
          return theme;
      }
    }, [theme]);
    (0, import_react4.useEffect)(() => {
      if (months.length !== 12)
        throw new Error("\u0637\u0648\u0644 \u0622\u0631\u0627\u06CC\u0647 \u0645\u0627\u0647 \u0647\u0627\u06CC \u0648\u0627\u0631\u062F \u0634\u062F\u0647\u060C \u0645\u06CC \u0628\u0627\u06CC\u0633\u062A 12 \u0628\u0627\u0634\u062F.");
    }, [months]);
    const Body = (0, import_react4.useMemo)(() => {
      return activeBody === "main" ? /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(MainBody_default, {
        activeDate,
        disabledDates,
        highlightToday,
        maxDate,
        minDate,
        onActiveDayChange: activeDayChangeHandler,
        selectedDate,
        themeClasses,
        showFridaysAsRed
      }) : activeBody === "months" ? /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(MonthsBody_default, {
        themeClasses,
        onChangeMonth: monthChangeHandler,
        selectedDate,
        months
      }) : /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(YearsBody_default, {
        themeClasses,
        onChangeYear: yearChangeHandler,
        activeDate,
        selectedDate
      });
    }, [
      activeBody,
      activeDate,
      disabledDates,
      highlightToday,
      maxDate,
      minDate,
      activeDayChangeHandler,
      selectedDate,
      themeClasses
    ]);
    return /* @__PURE__ */ (0, import_jsx_runtime6.jsxs)("div", {
      ref,
      style,
      className: "flex flex-col rounded-md shadow-lg font-vazirmatn max-w-[22rem] overflow-hidden",
      dir: "rtl",
      children: [
        /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(Header_default, {
          activeDate,
          selectedDate,
          onGoToToday: goToTodayHandler,
          showGoToToday: minDate ? compareMinDate() : showGoToToday,
          months,
          themeClasses
        }),
        /* @__PURE__ */ (0, import_jsx_runtime6.jsxs)("div", {
          style: { backgroundColor: themeClasses.bodyBackgroundColor },
          className: (0, import_classnames5.default)("p-4 flex flex-col items-center space-y-6"),
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime6.jsxs)("div", {
              className: "flex items-center justify-between text-gray-500 w-full",
              children: [
                /* @__PURE__ */ (0, import_jsx_runtime6.jsx)("button", {
                  onClick: previousMonthHandler,
                  style: { color: themeClasses.chevronRightColor },
                  children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(mH, {
                    className: "w-4 h-4"
                  })
                }),
                /* @__PURE__ */ (0, import_jsx_runtime6.jsxs)("button", {
                  className: "text-base",
                  onClick: cycleThroughBodies,
                  style: { color: themeClasses.topBarTextColor },
                  children: [
                    activeBody === "main" && months[(0, import_date_fns_jalali6.getMonth)(selectedDate)],
                    " ",
                    (0, import_persian_helpers4.convertDigits)((0, import_date_fns_jalali6.format)(selectedDate, "yyyy"))
                  ]
                }),
                /* @__PURE__ */ (0, import_jsx_runtime6.jsx)("button", {
                  onClick: nextMonthHandler,
                  style: { color: themeClasses.chevronLeftColor },
                  children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(dH, {
                    className: "w-4 h-4"
                  })
                })
              ]
            }),
            disableTransitions ? Body : /* @__PURE__ */ (0, import_jsx_runtime6.jsx)("div", {
              className: "relative",
              children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_react_transition_group.SwitchTransition, {
                mode: "in-out",
                children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(FadeTransition, {
                  bodyTransition,
                  timeout: 200,
                  unmountOnExit: true,
                  mountOnEnter: true,
                  children: Body
                }, activeBody)
              })
            })
          ]
        }),
        showFooter && /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(Footer_default, {
          themeClasses,
          onConfirm: () => onConfirm == null ? void 0 : onConfirm(activeDate),
          onCancel
        })
      ]
    });
  }
);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  Calendar
});
